Estructuras de datos
1 - Objetos -> Coleccion de información conformada por una llave y un valor, que agrupa inforción de un mismto contenido o elemento
    POO -> Programación Orientada a Objetos
        Literal
        Constructor
        Clase

Un objetos tiene propiedades y comportamientos
    Propiedad: -> Una descripción característica
        llave:valor(tipo de dato)
    Comportamiento: Es un accion que hace el Objetos
        llave:valor(funcion)

this

TypeScript - NodeJS
    src
        DTO
        Repository
        DATA
            Herencias, Polimorifmos, Abstracciones, Encapuslamientos


Desestructuracion de Objetos
    -> Eliminar la dependencia de atributos de un objeto


2 - Arreglos -> Conjunto de datos (cualquier tipo de dato) conformado por una posición y un valor. Se puede considerar una estructura de almacenamiento de datos ("Base de datos"). Solo un manejo Local (no tiene persistencia de datos)

Los arreglos o vectores tienen dos partes
    Longitud o tamaño: La cantidad de elementos dentro del arreglo
        Se dfine por cualquier numero entero n, donde n tiene un valor
    Posicion: Atributo de acceso al contenido
        Se define por un numero entero n, donde siempre el valor será n-1
            SIEMPRE se inicia en 0

Ciclo - Bucle - Estrucutura de repetición
    For, While, Do-While

Métodos de los arreglos -> ES6+
    25 métodos de los arreglos categorizados

    Métodos de Modificación -> Manipulan el arreglo original (información)
        -> pop(): Elimina SIEMPRE la ultima posición o último elemento de un arreglo 
        -> shift(): Elimina SIEMPRE la primera posición o primer elemento de un arreglo
        -> push(): Agrega un nuevo valor en la ultima posicion de un arreglo
        -> unShift(): Agrega un nuevo valor en la primera posicion de un arreglo
            Métodos con parámetros "Simples"

    Métodos de Busqueda (función anónima)
    Métodos de Iteración (función anónima)
        -> map(): Recorrido el arreglo y retorna uno nuevo con los valores resultantes
        -> filter(): Recorrido el arreglo y retorna uno nuevo con los valores resultantes que cumplan con una condicion dada
        -> forEach(): Recorrido el arreglo y muestra los valores resultantes
        -> find(): Recorrido el arreglo y retorna uno nuevo con el valor resultante que cumpla con una condicion dada
    Métodos de comparación (función anónima)